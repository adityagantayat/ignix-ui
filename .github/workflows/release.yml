name: Release

on:
  push:
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm build:packages
        
      - name: Build Docs
        run: pnpm docs:build
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload Docs Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'apps/docs/build'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
          version: pnpm version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        run: |
          gh release create v$(node -p "require('./packages/cli/package.json').version") \
            --generate-notes \
            --title "@ignix-ui/cli v$(node -p "require('./packages/cli/package.json').version")"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}